---
version: '2'
services:
  zookeeper-dc1:
    image: confluentinc/cp-zookeeper:5.5.1
    hostname: zookeeper-dc1
    container_name: zookeeper-dc1
    ports:
      - "2181:2181"
    environment:
      KAFKA_HEAP_OPTS: "-Xms64m -Xmx64m"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  zookeeper-dc2:
    image: confluentinc/cp-zookeeper:5.5.1
    hostname: zookeeper-dc2
    container_name: zookeeper-dc2
    ports:
      - "2182:2182"
    environment:
      KAFKA_HEAP_OPTS: "-Xms64m -Xmx64m"
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000

  broker1-dc1:
    image: confluentinc/cp-server:5.5.1
    hostname: broker1-dc1
    container_name: broker1-dc1
    depends_on:
      - zookeeper-dc1
    ports:
      - "9091:9091"
    environment:
      KAFKA_HEAP_OPTS: '-Xms256m -Xmx256m'
      KAFKA_BROKER_ID: 1
      KAFKA_JMX_PORT: 9991
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-dc1:2181'
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schema-registry-dc1:8081"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1-dc1:29091,PLAINTEXT_HOST://localhost:9091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      # Confluent Metrics Reporter for Control Center Cluster Monitoring
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1-dc1:29091
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper-dc1:2182
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_ENABLE: 'true'

  broker2-dc1:
    image: confluentinc/cp-server:5.5.1
    hostname: broker2-dc1
    container_name: broker2-dc1
    depends_on:
      - zookeeper-dc1
    ports:
      - "9092:9092"
    environment:
      KAFKA_HEAP_OPTS: '-Xms256m -Xmx256m'
      KAFKA_BROKER_ID: 2
      KAFKA_JMX_PORT: 9992
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-dc1:2181'
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schema-registry-dc1:8081"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2-dc1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      # Confluent Metrics Reporter for Control Center Cluster Monitoring
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1-dc1:29091
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper-dc1:2182
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_ENABLE: 'true'

  broker3-dc1:
    image: confluentinc/cp-server:5.5.1
    hostname: broker3-dc1
    container_name: broker3-dc1
    depends_on:
      - zookeeper-dc1
    ports:
      - "9093:9093"
    environment:
      KAFKA_HEAP_OPTS: '-Xms256m -Xmx256m'
      KAFKA_BROKER_ID: 3
      KAFKA_JMX_PORT: 9993
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-dc1:2181'
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schema-registry-dc1:8081"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3-dc1:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      # Confluent Metrics Reporter for Control Center Cluster Monitoring
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1-dc1:29091
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper-dc1:2182
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_ENABLE: 'true'

  broker1-dc2:
    image: confluentinc/cp-server:5.5.1
    hostname: broker1-dc2
    container_name: broker1-dc2
    depends_on:
      - zookeeper-dc2
    ports:
      - "9094:9094"
    environment:
      KAFKA_HEAP_OPTS: '-Xms256m -Xmx256m'
      KAFKA_BROKER_ID: 4
      KAFKA_JMX_PORT: 9994
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-dc2:2182'
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schema-registry-dc2:8082"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1-dc2:29094,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      # Confluent Metrics Reporter for Control Center Cluster Monitoring
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1-dc2:29094
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper-dc2:2182
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_ENABLE: 'true'

  broker2-dc2:
    image: confluentinc/cp-server:5.5.1
    hostname: broker2-dc2
    container_name: broker2-dc2
    depends_on:
      - zookeeper-dc2
    ports:
      - "9095:9095"
    environment:
      KAFKA_HEAP_OPTS: '-Xms256m -Xmx256m'
      KAFKA_BROKER_ID: 5
      KAFKA_JMX_PORT: 9995
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-dc2:2182'
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schema-registry-dc2:8082"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2-dc2:29095,PLAINTEXT_HOST://localhost:9095
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      # Confluent Metrics Reporter for Control Center Cluster Monitoring
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1-dc2:29094
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper-dc2:2182
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_ENABLE: 'true'

  broker3-dc2:
    image: confluentinc/cp-server:5.5.1
    hostname: broker3-dc2
    container_name: broker3-dc2
    depends_on:
      - zookeeper-dc2
    ports:
      - "9096:9096"
    environment:
      KAFKA_HEAP_OPTS: '-Xms256m -Xmx256m'
      KAFKA_BROKER_ID: 6
      KAFKA_JMX_PORT: 9996
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-dc2:2182'
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schema-registry-dc2:8082"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3-dc2:29096,PLAINTEXT_HOST://localhost:9096
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      # Confluent Metrics Reporter for Control Center Cluster Monitoring
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1-dc2:29094
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper-dc2:2182
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_ENABLE: 'true'

  schema-registry-dc1:
    image: confluentinc/cp-schema-registry:5.5.1
    hostname: schema-registry-dc1
    container_name: schema-registry-dc1
    restart: always
    depends_on:
      - zookeeper-dc1
      - broker1-dc1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HEAP_OPTS: "-Xms32m -Xmx32m"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-dc1
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1-dc1:29091'
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: ERROR

  schema-registry-dc2:
    image: confluentinc/cp-schema-registry:5.5.1
    hostname: schema-registry-dc2
    container_name: schema-registry-dc2
    restart: always
    depends_on:
      - zookeeper-dc1
      - broker1-dc1
      - schema-registry-dc1
    ports:
      - "8082:8082"
    environment:
      SCHEMA_REGISTRY_HEAP_OPTS: "-Xms32m -Xmx32m"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-dc2
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1-dc1:29091'
      SCHEMA_REGISTRY_MASTER_ELIGIBILITY: "false"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8082"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: ERROR
